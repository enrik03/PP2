
units         lj
atom_style    atomic
dimension     3
boundary      p p p 

lattice       fcc 1
region        soluto    block 9.5  10 0 16 0 16
region        solvente1 block 15  20  0 16 0 16
region        solvente2 block 0   4.5  0 16 0 16

region        box block 0 20 0 16 0 16
create_box    2 box  


create_atoms  1 region solvente1
create_atoms  1 region solvente2 
create_atoms  2 region soluto

pair_style    lj/cut 2.5

pair_coeff    1 1 1.0  1.0
pair_coeff    1 2 1.41 1.0
pair_coeff    2 2 2.0  1.0
mass          1 1.0
mass          2 1.0


# i create a group in order to use fix wall only with soluto

group         gsoluto type 2
group         gsolvente type 1
fix           1 all nve



#gsolvente = A_atoms
#gsoluto = B_atoms 


fix            rwall1 gsoluto wall/lj126 xlo 7 1.0 1.0 1.5 pbc yes
fix            rwall2 gsoluto wall/lj126 xhi 12 1.0 1.0 1.5 pbc yes

# Epsilon , Sigma  , R_cut 


velocity      all create 2 4928459
timestep      0.001

neighbor      0.3 bin
neigh_modify  every 10 delay 0 check yes
#compute       cc all msd average yes 


compute         2 all vacf
fix             5 all vector 1 c_2[4]
variable        diff equal dt*trap(f_5)
# Diffusion coeff. 
 
#minimize     1.0e-5 1.0e-6 1000 10000
thermo_style  custom step ke pe etotal press vol density v_diff
thermo        100
run_style     verlet 


# output data

#fix          2 all ave/atom 100 10000 10000 c_cc[*]    
dump          d all xyz 100 posicion6.xyz
#dump         dd gsoluto  xyz 100 posicion3.xyz type 2
write_data    data.write6

#run            10000

variable k equal ke

variable i loop 3
label myloop

if "${i} == 2" then "print 'Walls off'"
if "${i} == 2" then "unfix rwall1"
if "${i} == 2" then "unfix rwall2"

run 50000
#if "${i} == 2" then "print 'AAAAAAAAAAAAAAAA'"

if "${i} == 2" then "jump SELF myescape" 

next i 
jump SELF myloop
label myescape 

print "Enrique es el final" 

#dump           d all xyz 100 posicion3.xyz 
#dump          dd gsoluto  xyz 100 posicion3.xyz type 2
#write_data     data.write
  
#run           10000
